{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/Card.js","components/Loading.js","components/loading.gif","components/Regions.js","screens/Dashboard.js","screens/Cases.js","screens/Deaths.js","screens/Region.js","App.js","index.js"],"names":["Footer","className","href","target","rel","Navbar","to","Card","type","color","newTitle","totalTitle","useState","recent","setRecent","combined","setCombined","lastUpdated","setLastUpdated","loading","setLoading","dataError","setDataError","fetchCases","a","axios","get","data","newCasesByPublishDate","cumCasesByPublishDate","date","console","error","fetchDeaths","newDeaths28DaysByPublishDate","cumDeaths28DaysByPublishDate","useEffect","numeral","format","dayjs","Loading","src","alt","style","width","margin","display","Regions","setData","search","setSearch","fetchData","placeholder","value","onChange","e","onClick","filter","region","toLowerCase","includes","map","regionId","newCases","newDeaths","hStyle","Dashboard","id","maxWidth","Cases","chartData","setChartData","tableData","setTableData","dates","cases","slice","reverse","forEach","day","push","labels","datasets","label","backgroundColor","class","options","scales","yAxes","ticks","beginAtZero","stepSize","Deaths","Region","match","caseChartData","setCaseChartData","deathChartData","setDeathChartData","regionName","setRegionName","params","deaths","App","path","element","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d28f320.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='mt-10 mb-5 text-center text-gray-100'>\r\n      <p className='text-sm font-semibold text-gray-100'>\r\n        Developed by{\" \"}\r\n        <a\r\n          href='https://github.com/Aimireal'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          className='font-bold'\r\n        >\r\n          Dylan Hudson\r\n        </a>\r\n        , with data fetched from the{\" \"}\r\n        <a\r\n          href='https://coronavirus.data.gov.uk/details/developers-guide'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          className='font-bold'\r\n        >\r\n          GOV.UK Covid-19 API\r\n        </a>{\" \"}\r\n      </p>\r\n      <button className='mt-5 bg-charcoal text-gray-100 px-5 py-2 rounded text-sm font-semibold hover:bg-gray-600'>\r\n        <i className='fab fa-github mr-2'></i>\r\n        <a\r\n          href='https://github.com/Aimireal/React-Covid-Tracker'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n        >\r\n          View GitHub Repo\r\n        </a>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className='bg-charcoal p-4 text-center font-source-sans text-gray-50'>\r\n            <Link to='/'>\r\n                <h3 className='text-3xl font-normal'>\r\n                    <span className='font-semibold'>\r\n                        COVID-Tracker\r\n                    </span>{\" \"}\r\n                    <i className='fas fa-viruses'/>\r\n                </h3>\r\n            </Link>\r\n\r\n            <p className='text-sm font-light mt-1'>\r\n                All in one dashboard for statistics\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\nimport dayjs from 'dayjs'\r\nimport numeral from 'numeral'\r\n\r\nconst Card = ({ type, color, newTitle, totalTitle }) => {\r\nconst [recent, setRecent] = useState(0)\r\nconst [combined, setCombined] = useState(0)\r\nconst [lastUpdated, setLastUpdated] = useState(\"01/01/1970\")\r\nconst [loading, setLoading] = useState(false)\r\nconst [dataError, setDataError] = useState(null)\r\n\r\nconst fetchCases = async () => {\r\n    try {\r\n        setDataError(null)\r\n        const {\r\n            data: { data },\r\n        } = await axios.get(\r\n            `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&latestBy=newCasesByPublishDate&structure={\"date\":\"date\", \"newCasesByPublishDate\":\"newCasesByPublishDate\",\"cumCasesByPublishDate\":\"cumCasesByPublishDate\"}`\r\n        )\r\n\r\n        setRecent(data[0].newCasesByPublishDate)\r\n        setCombined(data[0].cumCasesByPublishDate)\r\n        setLastUpdated(data[0].date)\r\n        setLoading(false)\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            console.error(error)\r\n            setDataError(\"Error fetching data. Reload to try again.\")\r\n        }\r\n    }\r\n\r\n    const fetchDeaths = async () => {\r\n        setDataError(null)\r\n        try {\r\n        const {\r\n            data: { data },\r\n        } = await axios.get(\r\n            `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&latestBy=newDeaths28DaysByPublishDate&structure={\"date\":\"date\",\"newDeaths28DaysByPublishDate\":\"newDeaths28DaysByPublishDate\",\"cumDeaths28DaysByPublishDate\":\"cumDeaths28DaysByPublishDate\" }`\r\n        )\r\n\r\n        setRecent(data[0].newDeaths28DaysByPublishDate)\r\n        setCombined(data[0].cumDeaths28DaysByPublishDate)\r\n        setLastUpdated(data[0].date)\r\n        setLoading(false) \r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n            setDataError(\"Error fetching data. Reload to try again.\");\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n\r\n        if (type === \"cases\") {\r\n        fetchCases()\r\n        } else {\r\n        fetchDeaths()\r\n        }\r\n    }, [type])\r\n\r\nreturn (\r\n    <div\r\n        className={`w-full md:w-5/12   mb-5 md:mb-0 text-left font-semibold  rounded-md overflow-hidden bg-${color} hover:bg-${color}Hover transform hover:scale-102 ease-in-out duration-200`}\r\n    >\r\n        <Link to={`uk/${type}`}>\r\n            <div className='flex flex-col justify-between h-full p-5'>\r\n                <div>\r\n                    <h3 className='text-md mb-1'>{newTitle}</h3>\r\n                    <h2 className='text-2xl mb-3 font-bold'>\r\n                    {loading ? (\r\n                        \"-\"\r\n                    ) : dataError ? (\r\n                        <p className='text-sm font-light italic'>{dataError}</p>\r\n                    ) : (\r\n                        numeral(recent).format(\"0,0\")\r\n                    )}\r\n                    </h2>\r\n                </div>\r\n                <div>\r\n                    <h3 className='text-md mb-1 text-right'>{totalTitle}</h3>\r\n                    <h2 className='text-2xl text-right font-bold'>\r\n                    {loading ? (\r\n                        \"-\"\r\n                    ) : dataError ? (\r\n                        <p className='text-sm font-light italic'>{dataError}</p>\r\n                    ) : (\r\n                        numeral(combined).format(\"0,0\")\r\n                    )}\r\n                    </h2>\r\n                </div>\r\n                <p className='text-xs italic mt-3 '>{`Last updated ${dayjs(\r\n                    lastUpdated\r\n                ).format(\"DD/MM/YYYY\")}`}</p>\r\n            </div>\r\n        </Link>\r\n    </div>\r\n    )\r\n}   \r\n\r\nexport default Card","import React, { Fragment } from 'react'\r\nimport loading from './loading.gif'\r\n\r\nconst Loading = ({ type }) => {\r\n    return (\r\n        <Fragment>\r\n            <img\r\n                src={'loading'}\r\n                alt='Loading...'\r\n                style={{ width: '100px', margin: 'auto', display: 'block' }}\r\n            />\r\n            <p className='text-sm font-semibold text-center mt-3'>\r\n                {`Fetching ${type} data`}\r\n            </p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Loading","export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Loading from './Loading'\r\n\r\nconst Regions = () => {\r\n    const [data, setData] = useState([])\r\n    const [dataError, setDataError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const fetchData = async() => {\r\n        try {\r\n            const {\r\n                data: { data },\r\n            } = await axios.get(\r\n                `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=utla&latestBy=newCasesByPublishDate&structure={\"date\":\"date\",\"newCases\":\"newCasesByPublishDate\",\"newDeaths\":\"newDeaths28DaysByPublishDate\",\"region\":\"areaName\",\"regionId\":\"areaCode\"}`\r\n            )\r\n\r\n            setLoading(false);\r\n            setData(data);\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setDataError(\"Error: Fetching data failed\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return loading ? (\r\n        <Loading type='regional' />\r\n    ) : dataError ? (\r\n        <p className='text-md font-light italic'>{dataError}</p>\r\n    ) : (\r\n        <div>\r\n            <div className='mb-5'>\r\n                <span className='z-10 leading-snug font-normal text-center text-gray-400 absolute bg-transparent rounded text-base items-center justify-center w-8 pl-3 py-3'>\r\n                    <i className='fas fa-search'></i>\r\n                </span>\r\n    \r\n                <div className='flex'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Search regions'\r\n                        value={search || \"\"}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        className='px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full pl-10'\r\n                    />\r\n                    <button\r\n                        className='bg-charcoal hover:bg-gray-800 ease-in-out duration-200 ml-1 w-10 rounded'\r\n                        onClick={(e) => setSearch(\"\")}\r\n                    >\r\n                        <i className='fas fa-undo text-gray-50'></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='grid grid-cols-1 md:grid-cols-2 md:gap-x-12 md:gap-y-4 mb-5'>\r\n                { loading? null: data\r\n                .filter((region) =>\r\n                    region.region.toLowerCase().includes(search.toLowerCase())\r\n                )\r\n                .map((region) => (\r\n                    <Link to={`region/${region.regionId}`} key={region.regionId}>\r\n                    <div className={`w-full  p-5 mb-5 md:mb-0 text-left font-semibold  rounded-md bg-pacific hover:bg-pacificHover ease-in-out duration-100 text-gray-50`}>\r\n                        <div className='flex flex-col'>\r\n                        <p className='text-md font-normal'>{region.region}</p>\r\n                        <p className='text-xl'>{`${\r\n                            region.newCases == null ? \"0\" : region.newCases\r\n                        } new cases`}</p>\r\n                        <p className='text-xl'>{`${\r\n                            region.newDeaths == null ? \"0\" : region.newDeaths\r\n                        } new deaths`}</p>\r\n                        </div>\r\n                    </div>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )   \r\n}\r\n        \r\n\r\nexport default Regions\r\n","import React from 'react'\r\nimport Card from '../components/Card'\r\nimport Regions from '../components/Regions'\r\n\r\nconst hStyle = { color: 'white' }\r\nconst Dashboard = () => {\r\n    return (\r\n        <div className='mx-auto font-source-sans'>\r\n            <section id='uk-data'>\r\n                <div className='px-10 pb-10 mx-auto' style={{ maxWidth: \"1000px\"}}>\r\n                    <h1 className='pt-5 mb-5 text-2x1' style={ hStyle }>\r\n                        UK Summary\r\n                    </h1>\r\n                    <div className='flex-non md:flex justify-between w-full'>\r\n                        <Card\r\n                            type='cases'\r\n                            newTitle='New cases over 24 hour period'\r\n                            totalTitle='Total cases'\r\n                            color='white'\r\n                        />\r\n                        <Card\r\n                            type='deaths'\r\n                            newTitle='New deaths within 28 days of a positive test'\r\n                            totalTitle='Total deaths'\r\n                            color='white'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section id='regional-data'>\r\n                <div className='px-10 pb-10 mx-auto' style={{ maxWidth: \"1000px\"}}>\r\n                    <h1 className='pt-5 mb-5 text-2x1' style={ hStyle }>\r\n                        {`Regional Data (24 Hours)`}\r\n                        <Regions/>\r\n                    </h1>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState, useEffect }  from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport dayjs from 'dayjs'\r\nimport numeral from 'numeral'\r\nimport Loading from '../components/Loading'\r\n\r\nconst Cases = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [dataError, setDataError] = useState(null)\r\n    const [chartData, setChartData] = useState({})\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const chartOptions = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 10000,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true)\r\n        setDataError(null)\r\n\r\n        try{\r\n            let dates = []\r\n            let cases = []\r\n\r\n            const {\r\n                data: { data },\r\n                } = await axios.get(\r\n                    `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&structure={\"date\":\"date\", \"newCasesByPublishDate\":\"newCasesByPublishDate\",\"cumCasesByPublishDate\":\"cumCasesByPublishDate\"}`\r\n                )\r\n            \r\n            setTableData(data.slice(0, 90))\r\n            const latestMonth = data.slice(0, 90).reverse()\r\n\r\n            latestMonth.forEach((day) => {\r\n                dates.push(dayjs(day.date).format(\"DD/MM/YYYY\"));\r\n                cases.push(day.newCasesByPublishDate);\r\n            })\r\n\r\n            setChartData({\r\n                labels: dates,\r\n                datasets: [\r\n                    {\r\n                        label: 'New cases within last 24 hours',\r\n                        data: cases,\r\n                        backgroundColor: '#292929'\r\n                    }\r\n                ]\r\n            })\r\n\r\n            setLoading = false\r\n        } catch (error) {\r\n            setLoading(false)\r\n            console.error(error)\r\n            setDataError('Error: Fetching cases data failed')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n        className='px-2 sm:px-10 text-center md:text-left mx-auto'\r\n        style={{ maxWidth: \"1000px\" }}\r\n        >\r\n        {/* NAV BUTTONS */}\r\n        <div className='flex  justify-between mt-3'>\r\n            <Link\r\n            to={\"/\"}\r\n            className=' bg-lavender1 hover:bg-gray-400 ease-in-out duration-100 font-semibold text-lg px-3 py-1 rounded'\r\n            >\r\n            <i class='fas fa-arrow-alt-circle-left'></i> Dashboard\r\n            </Link>\r\n            <Link\r\n            to={\"/uk/deaths\"}\r\n            className='  bg-goldenrod hover:bg-goldenrodHover ease-in-out duration-100 font-semibold text-lg px-3 py-1 rounded'\r\n            >\r\n            UK Deaths <i class='fas fa-arrow-alt-circle-right'></i>\r\n            </Link>\r\n        </div>\r\n\r\n        {/* PAGE HEADER */}\r\n        <h1 className='pt-5 mb-5 text-xl sm:text-2xl'>\r\n            {`UK cases (past 90 days)`}{\" \"}\r\n        </h1>\r\n\r\n        {/* CONTENT */}\r\n        {loading ? (\r\n            <Loading type='case' />\r\n        ) : dataError ? (\r\n            <p className='text-md font-light italic'>{dataError}</p>\r\n        ) : (\r\n            <div>\r\n            <div className='chart'>\r\n                <Bar data={chartData} options={chartOptions}></Bar>\r\n            </div>\r\n\r\n            <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n                Number of people with at least one positive COVID-19 test result\r\n                (either lab-reported or lateral flow device), by specimen date.\r\n                Individuals tested positive more than once are only counted once, on\r\n                the date of their first positive test.\r\n            </p>\r\n\r\n            <div id='table-wrapper' className='my-5'>\r\n                <table class='table-fixed rounded w-full shadow-sm text-center md:text-left '>\r\n                <thead>\r\n                    <tr>\r\n                    <th className='bg-charcoal rounded-tl text-gray-50  px-8 py-3 w-1/2'>\r\n                        Date\r\n                    </th>\r\n                    <th className='bg-charcoal rounded-tr text-gray-50  px-8 py-3 w-1/2'>\r\n                        Cases\r\n                    </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableData.map((day) => (\r\n                    <tr className='even:bg-lavender1 odd:bg-lavender2 border-b border-lavender2'>\r\n                        <td className=' px-8 py-2'>\r\n                        {dayjs(day.date).format(\"DD/MM/YYYY\")}\r\n                        </td>\r\n                        <td className=' px-8 py-2'>\r\n                        {numeral(day.newCasesByPublishDate).format(\"0,0\")}\r\n                        </td>\r\n                    </tr>\r\n                    ))}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useState, useEffect }  from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport dayjs from 'dayjs'\r\nimport numeral from 'numeral'\r\nimport Loading from '../components/Loading'\r\n\r\nconst Deaths = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [dataError, setDataError] = useState(null)\r\n    const [chartData, setChartData] = useState({})\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const chartOptions = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        stepSize: 10000,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true)\r\n        setDataError(null)\r\n\r\n        try{\r\n            let dates = []\r\n            let cases = []\r\n\r\n            const {\r\n                data: { data },\r\n                } = await axios.get(\r\n                    `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=overview&structure={\"date\":\"date\", \"newDeaths28DaysByPublishDate\":\"newDeaths28DaysByPublishDate\",\"cumDeaths28DaysByPublishDate\":\"cumDeaths28DaysByPublishDate\"}`\r\n                )\r\n            \r\n            setTableData(data.slice(0, 90))\r\n            const latestMonth = data.slice(0, 90).reverse()\r\n\r\n            latestMonth.forEach((day) => {\r\n                dates.push(dayjs(day.date).format(\"DD/MM/YYYY\"));\r\n                cases.push(day.newDeaths28DaysByPublishDate);\r\n            })\r\n\r\n            setChartData({\r\n                labels: dates,\r\n                datasets: [\r\n                    {\r\n                        label: 'New deaths within 28 days of positive test',\r\n                        data: cases,\r\n                        backgroundColor: '#292929'\r\n                    }\r\n                ]\r\n            })\r\n\r\n            setLoading = false\r\n        } catch (error) {\r\n            setLoading(false)\r\n            console.error(error)\r\n            setDataError('Error: Fetching deaths data failed')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='px-2 sm:px-10 text-center md:text-left mx-auto'style={{ maxWidth: \"1000px\" }}>\r\n            {/* NAV BUTTONS */}\r\n            <div className='flex  justify-between mt-3'>\r\n                <Link\r\n                to={\"/\"}\r\n                className=' bg-lavender1 hover:bg-gray-400 ease-in-out duration-100 font-semibold text-lg px-3 py-1 rounded'\r\n                >\r\n                <i class='fas fa-arrow-alt-circle-left'></i> Dashboard\r\n                </Link>\r\n                <Link\r\n                to={\"/uk/cases\"}\r\n                className='  bg-pacific hover:bg-pacificHover ease-in-out duration-100 font-semibold text-lg px-3 py-1 rounded text-gray-50'\r\n                >\r\n                UK Cases <i class='fas fa-arrow-alt-circle-right'></i>\r\n                </Link>\r\n            </div>\r\n\r\n            {/* PAGE HEADER */}\r\n            <h1 className='pt-5 mb-5 text-xl sm:text-2xl'>\r\n                {`UK deaths (past 90 days)`}{\" \"}\r\n            </h1>\r\n\r\n            {/* CONTENT */}\r\n            {loading ? (\r\n                <Loading type='death' />\r\n            ) : dataError ? (\r\n                <p className='text-md font-light italic'>{dataError}</p>\r\n            ) : (\r\n                <div>\r\n                <div className='chart'>\r\n                    <Bar data={chartData} options={chartOptions}></Bar>\r\n                </div>\r\n\r\n                <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n                    Number of deaths of people who had had a positive test result for\r\n                    COVID-19 and died within 28 days of the first positive test.\r\n                </p>\r\n\r\n                <div id='table-wrapper' className='my-5'>\r\n                    <table class='table-fixed rounded w-full shadow-sm text-center md:text-left '>\r\n                    <thead>\r\n                        <tr>\r\n                        <th className='bg-charcoal rounded-tl text-gray-50  px-8 py-3 w-1/2'>\r\n                            Date\r\n                        </th>\r\n                        <th className='bg-charcoal rounded-tr text-gray-50  px-8 py-3 w-1/2'>\r\n                            Deaths\r\n                        </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableData.map((day) => (\r\n                        <tr className='even:bg-lavender1 odd:bg-lavender2 border-b border-lavender2'>\r\n                            <td className=' px-8 py-2'>\r\n                            {dayjs(day.date).format(\"DD/MM/YYYY\")}\r\n                            </td>\r\n                            <td className=' px-8 py-2'>\r\n                            {numeral(day.newDeaths28DaysByPublishDate).format(\"0,0\")}\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Deaths","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport dayjs from 'dayjs'\r\nimport numeral from 'numeral'\r\nimport Loading from '../components/Loading'\r\n\r\nconst Region = ({ match }) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [dataError, setDataError] = useState(null)\r\n    const [caseChartData, setCaseChartData] = useState({})\r\n    const [deathChartData, setDeathChartData] = useState({})\r\n    const [tableData, setTableData] = useState([])\r\n    const [regionName, setRegionName] = useState(\"\")\r\n\r\n    const regionId = match.params.id\r\n\r\n    const caseChartOptions = {\r\n        scales: {\r\n        yAxes: [\r\n            {\r\n            ticks: {\r\n                beginAtZero: true,\r\n                stepSize: 1000,\r\n            },\r\n            },\r\n        ],\r\n        },\r\n    }\r\n\r\n    const deathChartOptions = {\r\n        scales: {\r\n        yAxes: [\r\n            {\r\n            ticks: {\r\n                beginAtZero: true,\r\n                stepSize: 50,\r\n            },\r\n            },\r\n        ],\r\n        },\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true)\r\n        setDataError(null)\r\n\r\n        try {\r\n        let dates = []\r\n        let cases = []\r\n        let deaths = []\r\n\r\n        const {\r\n            data: { data },\r\n        } = await axios.get(\r\n            `https://api.coronavirus.data.gov.uk/v1/data?filters=areaType=utla;areaCode=${regionId}&structure={\"date\":\"date\",\"newCasesByPublishDate\":\"newCasesByPublishDate\",\"newDeaths28DaysByPublishDate\":\"newDeaths28DaysByPublishDate\",\"region\":\"areaName\",\"regionId\":\"areaCode\"}`\r\n        )\r\n\r\n        if (data) {\r\n            setRegionName(data[0].region)\r\n            setTableData(data.slice(0, 90))\r\n            const latestMonth = data.slice(0, 90).reverse()\r\n\r\n            latestMonth.forEach((day) => {\r\n            dates.push(dayjs(day.date).format(\"DD/MM/YYYY\"))\r\n            cases.push(day.newCasesByPublishDate)\r\n            deaths.push(day.newDeaths28DaysByPublishDate)\r\n            })\r\n\r\n            setCaseChartData({\r\n            labels: dates,\r\n            datasets: [\r\n                {\r\n                label: \"New cases in the last 24 hours\",\r\n                data: cases,\r\n                backgroundColor: \"#00A9C0\",\r\n                },\r\n            ],\r\n            })\r\n\r\n            setDeathChartData({\r\n            labels: dates,\r\n            datasets: [\r\n                {\r\n                label: \"New deaths in the last 28 days\",\r\n                data: deaths,\r\n                backgroundColor: \"#D67B49\",\r\n                },\r\n            ],\r\n            })\r\n\r\n            setLoading(false)\r\n        } else {\r\n            setLoading(false)\r\n            setDataError(\"Error: Failed to fetch regional data\")\r\n        }\r\n\r\n        } catch (error) {\r\n        setLoading(false)\r\n        console.error(error)\r\n        setDataError(\"Error: Failed to fetch regional data\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, )\r\n\r\n    return (\r\n        <div\r\n        className='px-2 sm:px-10 text-center md:text-left mx-auto'\r\n        style={{ maxWidth: \"1000px\" }}\r\n        >\r\n        <div className='flex  justify-between mt-3'>\r\n            <Link to={\"/\"}\r\n                className=' bg-lavender1 hover:bg-gray-400 ease-in-out duration-100 font-semibold text-lg px-3 py-1 rounded'\r\n            >\r\n            <i className='fas fa-arrow-alt-circle-left'></i> Dashboard\r\n            </Link>\r\n        </div>\r\n\r\n        <h1 className='pt-5  text-xl sm:text-2xl'>\r\n            {`Regional data (past 90 days)`}{\" \"}\r\n        </h1>\r\n        \r\n        {loading ? (\r\n            <Loading type='regional' />\r\n        ) : dataError ? (\r\n            <p className='mt-5 text-md font-light italic'>{dataError}</p>\r\n        ) : (\r\n            <div>\r\n            <h1 className='pt-5 mb-5 text-xl sm:text-xl font-semibold italic'>\r\n                {`${regionName}`}{\" \"}\r\n            </h1>\r\n\r\n            <section id='cases' className='mb-10'>\r\n                <h2 className='text-lg underline '>Cases</h2>\r\n                <div className='chart'>\r\n                <Bar data={caseChartData} options={caseChartOptions}></Bar>\r\n                </div>\r\n\r\n                <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n                Number of people with at least one positive COVID-19 test result\r\n                (either lab-reported or lateral flow device), by specimen date.\r\n                Individuals tested positive more than once are only counted once,\r\n                on the date of their first positive test.\r\n                </p>\r\n            </section>\r\n\r\n            <section id='deaths' className=' mb-10'>\r\n                <h2 className='text-lg underline mt-8 '>Deaths</h2>\r\n                <div className='chart'>\r\n                <Bar data={deathChartData} options={deathChartOptions}></Bar>\r\n                </div>\r\n\r\n                <p className='bg-lavender1 rounded p-3 text-center text-sm sm:text-base mt-5'>\r\n                Number of deaths of people who had had a positive test result for\r\n                COVID-19 and died within 28 days of the first positive test.\r\n                </p>\r\n            </section>\r\n\r\n            <section id='table'>\r\n                <div id='table-wrapper' className='mt-10 mb-5'>\r\n                <h2 className='text-lg underline mt-8 mb-4 '>Daily summary</h2>\r\n                <table className='table-fixed rounded w-full shadow-sm text-center md:text-left '>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className='bg-charcoal rounded-tl text-gray-50  px-8 py-3 w-1/2'>\r\n                        Date\r\n                        </th>\r\n                        <th className='bg-charcoal  text-gray-50  px-8 py-3 w-1/2'>\r\n                        Cases\r\n                        </th>\r\n                        <th className='bg-charcoal rounded-tr text-gray-50  px-8 py-3 w-1/2'>\r\n                        Deaths\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {tableData.map((day) => (\r\n                        <tr\r\n                        className='even:bg-lavender1 odd:bg-lavender2 border-b border-lavender2'\r\n                        key={day.date}\r\n                        >\r\n                        <td className=' px-8 py-2'>\r\n                            {dayjs(day.date).format(\"DD/MM/YYYY\")}\r\n                        </td>\r\n                        <td className=' px-8 py-2'>\r\n                            {numeral(day.newCasesByPublishDate).format(\"0,0\")}\r\n                        </td>\r\n                        <td className=' px-8 py-2'>\r\n                            {numeral(day.newDeaths28DaysByPublishDate).format(\r\n                            \"0,0\"\r\n                            )}\r\n                        </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </section>\r\n            </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Region","import { Routes, Route, Navigate } from \"react-router-dom\"\r\nimport Footer from './components/Footer'\r\nimport Navbar from './components/Navbar'\r\nimport Dashboard from './screens/Dashboard'\r\nimport Cases from './screens/Cases'\r\nimport Deaths from './screens/Deaths'\r\nimport Region from './screens/Region'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='font-source-sans'>\r\n            <Navbar />\r\n            <Routes>\r\n                <Route path='/' element={<Dashboard/>} />\r\n                <Route path='/uk/cases' element={<Cases/>} exact/>\r\n                <Route path='/uk/deaths' element={<Deaths/>} exact/>\r\n                <Route path='/region/:id' element={<Region/>}/>\r\n                <Route path=\"/\" render={() => <Navigate to={<Dashboard/>} />} />\r\n            </Routes>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './assets/main.css'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}